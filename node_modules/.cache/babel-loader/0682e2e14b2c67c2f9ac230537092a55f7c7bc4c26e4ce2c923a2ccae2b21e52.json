{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst addCartSlice = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    replaceCart(state, action) {\n      return action.payload;\n    },\n    additem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.find(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.push({\n          ...newItem,\n          quantity: 1\n        });\n      }\n    },\n    removeItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.find(item => item.id === itemId);\n      if (existingItem) {\n        if (existingItem.quantity > 1) {\n          existingItem.quantity -= 1;\n        } else {\n          return state.filter(item => item.id !== itemId);\n        }\n      }\n      return state;\n    },\n    clearCart(state) {\n      return [];\n    }\n  }\n});\nexport const {\n  additem,\n  removeItem,\n  clearCart,\n  replaceCart\n} = addCartSlice.actions;\nexport default addCartSlice;","map":{"version":3,"names":["createSlice","addCartSlice","name","initialState","reducers","replaceCart","state","action","payload","additem","newItem","existingItem","find","item","id","quantity","push","removeItem","itemId","filter","clearCart","actions"],"sources":["/Users/alejandrohussein/Desktop/React/Section-20-starting-project/src/components/store/addToCart.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst addCartSlice = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    replaceCart(state, action){\n     return  action.payload;\n    },\n\n\n    additem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.find(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.push({ ...newItem, quantity: 1 })\n      }\n\n    },\n    removeItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.find(item => item.id === itemId);\n      if (existingItem) {\n        if (existingItem.quantity > 1) {\n          existingItem.quantity -= 1\n        } else {\n          return state.filter(item => item.id !== itemId)\n        }\n      }\n      return state\n    },\n    clearCart(state) {\n      return []\n    }\n  }\n})\n\n\n\nexport const { additem, removeItem, clearCart, replaceCart } = addCartSlice.actions;\nexport default addCartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACzB,OAAQA,MAAM,CAACC,OAAO;IACvB,CAAC;IAGDC,OAAOA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAC/D,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACI,QAAQ,IAAI,CAAC;MAC5B,CAAC,MAAM;QACLT,KAAK,CAACU,IAAI,CAAC;UAAE,GAAGN,OAAO;UAAEK,QAAQ,EAAE;QAAE,CAAC,CAAC;MACzC;IAEF,CAAC;IACDE,UAAUA,CAACX,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMW,MAAM,GAAGX,MAAM,CAACC,OAAO;MAC7B,MAAMG,YAAY,GAAGL,KAAK,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,MAAM,CAAC;MAC3D,IAAIP,YAAY,EAAE;QAChB,IAAIA,YAAY,CAACI,QAAQ,GAAG,CAAC,EAAE;UAC7BJ,YAAY,CAACI,QAAQ,IAAI,CAAC;QAC5B,CAAC,MAAM;UACL,OAAOT,KAAK,CAACa,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,MAAM,CAAC;QACjD;MACF;MACA,OAAOZ,KAAK;IACd,CAAC;IACDc,SAASA,CAACd,KAAK,EAAE;MACf,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AAIF,OAAO,MAAM;EAAEG,OAAO;EAAEQ,UAAU;EAAEG,SAAS;EAAEf;AAAY,CAAC,GAAGJ,YAAY,CAACoB,OAAO;AACnF,eAAepB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}