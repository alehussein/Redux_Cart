{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { toggleActions } from './toggleCart';\nconst addCartSlice = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    additem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.find(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.push({\n          ...newItem,\n          quantity: 1\n        });\n      }\n    },\n    removeItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.find(item => item.id === itemId);\n      if (existingItem) {\n        if (existingItem.quantity > 1) {\n          existingItem.quantity -= 1;\n        } else {\n          return state.filter(item => item.id !== itemId);\n        }\n      }\n      return state;\n    },\n    clearCart(state) {\n      return [];\n    }\n  }\n});\nexport const sendCartData = products => {\n  return async dispatch => {\n    dispatch(toggleActions.showNotification({\n      stattus: 'pending',\n      title: 'Sending',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-7cf50-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(products)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(toggleActions.showNotification({\n        stattus: 'succes',\n        title: 'Succes',\n        message: 'Sending cart data successfully'\n      }));\n    } catch (error) {\n      dispatch(toggleActions.showNotification({\n        stattus: 'error',\n        title: 'Error',\n        message: 'Sending cart data Failed'\n      }));\n    }\n  };\n};\nexport const {\n  additem,\n  removeItem,\n  clearCart\n} = addCartSlice.actions;\nexport default addCartSlice;","map":{"version":3,"names":["createSlice","toggleActions","addCartSlice","name","initialState","reducers","additem","state","action","newItem","payload","existingItem","find","item","id","quantity","push","removeItem","itemId","filter","clearCart","sendCartData","products","dispatch","showNotification","stattus","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","actions"],"sources":["/Users/alejandrohussein/Desktop/React/Section-20-starting-project/src/components/store/addToCart.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { toggleActions } from './toggleCart';\n\nconst addCartSlice = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    additem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.find(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.push({ ...newItem, quantity: 1 })\n      }\n\n    },\n    removeItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.find(item => item.id === itemId);\n      if (existingItem) {\n        if (existingItem.quantity > 1) {\n          existingItem.quantity -= 1\n        } else {\n          return state.filter(item => item.id !== itemId)\n        }\n      }\n      return state\n    },\n    clearCart(state) {\n      return []\n    }\n  }\n})\n\n\n\nexport const sendCartData = (products) => {\n  return async (dispatch) => {\n    dispatch(\n      toggleActions.showNotification({\n        stattus: 'pending',\n        title: 'Sending',\n        message: 'Sending cart data!'\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-7cf50-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(products),\n      })\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.')\n      }\n    }\n    try {\n      await sendRequest();\n\n      dispatch(toggleActions.showNotification({\n        stattus: 'succes',\n        title: 'Succes',\n        message: 'Sending cart data successfully'\n      }))\n    } catch (error) {\n      dispatch(toggleActions.showNotification({\n        stattus: 'error',\n        title: 'Error',\n        message: 'Sending cart data Failed'\n      }))\n    }\n\n\n\n\n\n  }\n}\n\nexport const { additem, removeItem, clearCart } = addCartSlice.actions;\nexport default addCartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,cAAc;AAE5C,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAC/D,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACI,QAAQ,IAAI,CAAC;MAC5B,CAAC,MAAM;QACLR,KAAK,CAACS,IAAI,CAAC;UAAE,GAAGP,OAAO;UAAEM,QAAQ,EAAE;QAAE,CAAC,CAAC;MACzC;IAEF,CAAC;IACDE,UAAUA,CAACV,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMU,MAAM,GAAGV,MAAM,CAACE,OAAO;MAC7B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,MAAM,CAAC;MAC3D,IAAIP,YAAY,EAAE;QAChB,IAAIA,YAAY,CAACI,QAAQ,GAAG,CAAC,EAAE;UAC7BJ,YAAY,CAACI,QAAQ,IAAI,CAAC;QAC5B,CAAC,MAAM;UACL,OAAOR,KAAK,CAACY,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,MAAM,CAAC;QACjD;MACF;MACA,OAAOX,KAAK;IACd,CAAC;IACDa,SAASA,CAACb,KAAK,EAAE;MACf,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AAIF,OAAO,MAAMc,YAAY,GAAIC,QAAQ,IAAK;EACxC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACNtB,aAAa,CAACuB,gBAAgB,CAAC;MAC7BC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,EAAE;QAC7FC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,QAAQ;MAC/B,CAAC,CAAC;MACF,IAAI,CAACO,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IACD,IAAI;MACF,MAAMR,WAAW,CAAC,CAAC;MAEnBL,QAAQ,CAACtB,aAAa,CAACuB,gBAAgB,CAAC;QACtCC,OAAO,EAAE,QAAQ;QACjBC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdd,QAAQ,CAACtB,aAAa,CAACuB,gBAAgB,CAAC;QACtCC,OAAO,EAAE,OAAO;QAChBC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL;EAMF,CAAC;AACH,CAAC;AAED,OAAO,MAAM;EAAErB,OAAO;EAAEW,UAAU;EAAEG;AAAU,CAAC,GAAGlB,YAAY,CAACoC,OAAO;AACtE,eAAepC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}