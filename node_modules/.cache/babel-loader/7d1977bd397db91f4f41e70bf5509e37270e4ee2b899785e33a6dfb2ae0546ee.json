{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { toggleActions } from './toggleCart';\nconst addCartSlice = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    additem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.find(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.push({\n          ...newItem,\n          quantity: 1\n        });\n      }\n    },\n    removeItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.find(item => item.id === itemId);\n      if (existingItem) {\n        if (existingItem.quantity > 1) {\n          existingItem.quantity -= 1;\n        } else {\n          return state.filter(item => item.id !== itemId);\n        }\n      }\n      return state;\n    },\n    clearCart(state) {\n      return [];\n    }\n  }\n});\nconst sendCartData = products => {\n  return async dispach => {\n    dispach(toggleActions.showNotification({\n      stattus: 'pending',\n      title: 'Sending',\n      message: 'Sending cart data!'\n    }));\n    const response = await fetch('https://react-http-7cf50-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(products)\n    });\n    if (!response.ok) {\n      throw new Error('Sending cart data failed.');\n    }\n    dispach(toggleActions.showNotification({\n      stattus: 'succes',\n      title: 'Succes',\n      message: 'Sending cart data successfully'\n    }));\n  };\n};\nexport const {\n  additem,\n  removeItem,\n  clearCart\n} = addCartSlice.actions;\nexport default addCartSlice;","map":{"version":3,"names":["createSlice","toggleActions","addCartSlice","name","initialState","reducers","additem","state","action","newItem","payload","existingItem","find","item","id","quantity","push","removeItem","itemId","filter","clearCart","sendCartData","products","dispach","showNotification","stattus","title","message","response","fetch","method","body","JSON","stringify","ok","Error","actions"],"sources":["/Users/alejandrohussein/Desktop/React/Section-20-starting-project/src/components/store/addToCart.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { toggleActions } from './toggleCart';\n\nconst addCartSlice = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    additem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.find(item => item.id === newItem.id);\n      if(existingItem){\n        existingItem.quantity += 1;\n      }else{\n        state.push({...newItem, quantity: 1})\n      }\n      \n    },\n    removeItem(state, action){\n      const itemId = action.payload;\n      const existingItem = state.find(item => item.id === itemId);\n      if(existingItem){\n        if(existingItem.quantity > 1){\n          existingItem.quantity -= 1\n        }else{\n          return state.filter(item => item.id !== itemId)\n        }\n      }\n      return state\n    },\n    clearCart(state){\n      return []\n    }\n  }\n})\n\nconst sendCartData = (products) => {\n  return async (dispach) => {\n    dispach(\n      toggleActions.showNotification({\n        stattus: 'pending',\n        title: 'Sending',\n        message: 'Sending cart data!'\n      })\n    );\n    const response = await fetch('https://react-http-7cf50-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(products),\n    })\n    if (!response.ok) {\n      throw new Error('Sending cart data failed.')\n    }\n    dispach(toggleActions.showNotification({\n      stattus: 'succes',\n      title: 'Succes',\n      message: 'Sending cart data successfully'\n    }))\n  }\n}\n\nexport const { additem, removeItem, clearCart } = addCartSlice.actions;\nexport default addCartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,cAAc;AAE5C,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAC/D,IAAGH,YAAY,EAAC;QACdA,YAAY,CAACI,QAAQ,IAAI,CAAC;MAC5B,CAAC,MAAI;QACHR,KAAK,CAACS,IAAI,CAAC;UAAC,GAAGP,OAAO;UAAEM,QAAQ,EAAE;QAAC,CAAC,CAAC;MACvC;IAEF,CAAC;IACDE,UAAUA,CAACV,KAAK,EAAEC,MAAM,EAAC;MACvB,MAAMU,MAAM,GAAGV,MAAM,CAACE,OAAO;MAC7B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,MAAM,CAAC;MAC3D,IAAGP,YAAY,EAAC;QACd,IAAGA,YAAY,CAACI,QAAQ,GAAG,CAAC,EAAC;UAC3BJ,YAAY,CAACI,QAAQ,IAAI,CAAC;QAC5B,CAAC,MAAI;UACH,OAAOR,KAAK,CAACY,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,MAAM,CAAC;QACjD;MACF;MACA,OAAOX,KAAK;IACd,CAAC;IACDa,SAASA,CAACb,KAAK,EAAC;MACd,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AAEF,MAAMc,YAAY,GAAIC,QAAQ,IAAK;EACjC,OAAO,MAAOC,OAAO,IAAK;IACxBA,OAAO,CACLtB,aAAa,CAACuB,gBAAgB,CAAC;MAC7BC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,EAAE;MAC7FC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ;IAC/B,CAAC,CAAC;IACF,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IACAZ,OAAO,CAACtB,aAAa,CAACuB,gBAAgB,CAAC;MACrCC,OAAO,EAAE,QAAQ;MACjBC,KAAK,EAAE,QAAQ;MACfC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;EACL,CAAC;AACH,CAAC;AAED,OAAO,MAAM;EAAErB,OAAO;EAAEW,UAAU;EAAEG;AAAU,CAAC,GAAGlB,YAAY,CAACkC,OAAO;AACtE,eAAelC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}